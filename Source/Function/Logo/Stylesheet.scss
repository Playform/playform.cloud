.Color {
	position: relative;
	overflow: hidden;
}

.Color {
	transition: transform 10s ease-out;

	&::before {
		content: "";
		position: absolute;
		top: 0;
		width: 200%;
		height: 100%;
		background: linear-gradient(
			to right,
			rgb(227, 224, 219) 0%,
			rgb(227, 224, 219) 25%,
			white 25%,
			white 100%
		);
		animation: 2s infinite alternate ease-out;
		transition: background-position 10s ease-out;
		background-size: 200% 100%;
	}

	&.Left::before {
		left: 0;
		animation-name: LeftSlide;
	}

	&.Right::before {
		right: 0;
		animation-name: RightSlide;
	}
}

.Color:hover::before,
.Color:hover + .Color::before,
.Color:has(+ .Color:hover)::before {
	background-position: 100% 100%;
}

.Color:hover,
.Color:hover + .Color,
.Color:has(+ .Color:hover) {
	transform: rotate(30deg);
}

$rows: 5;
$cols: 3;

@for $row from 1 through $rows {
	@for $col from 1 through $cols {
		@if $row > 1 {
			.Grid:has(.Row:nth-child(#{$row}) .Color:nth-child(#{$col}):hover) {
				.Row:nth-child(#{$row - 1}) .Color:nth-child(#{$col}) {
					transform: rotate(30deg);

					&::before {
						background-position: 100% 100%;
					}
				}
			}
		}

		@if $row < $rows {
			.Grid:has(.Row:nth-child(#{$row}) .Color:nth-child(#{$col}):hover) {
				.Row:nth-child(#{$row + 1}) .Color:nth-child(#{$col}) {
					transform: rotate(30deg);

					&::before {
						background-position: 100% 100%;
					}
				}
			}
		}
	}
}

@keyframes LeftSlide {
	0% {
		transform: translateX(0);
	}

	100% {
		transform: translateX(-50%);
	}
}

@keyframes RightSlide {
	0% {
		transform: translateX(0);
	}

	100% {
		transform: translateX(50%);
	}
}
